usage: conda [-h] [--no-plugins] [-V] COMMAND ...
conda: error: argument COMMAND: invalid choice: 'activate' (choose from 'clean', 'compare', 'config', 'create', 'info', 'init', 'install', 'list', 'notices', 'package', 'remove', 'uninstall', 'rename', 'run', 'search', 'update', 'upgrade', 'build', 'content-trust', 'convert', 'debug', 'develop', 'doctor', 'index', 'inspect', 'metapackage', 'render', 'skeleton', 'token', 'pack', 'server', 'verify', 'env', 'repo')
wandb: Currently logged in as: akshgarg (graph-ccs). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.16.2 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.13.4
wandb: Run data is saved locally in /atlas2/u/akshgarg/cfgdm/GeoLDM/wandb/run-20240123_144256-qwibw26q
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run single_cfg_mu_Cv_resume_qm9_second_half_egnn_dynamics_splitRatio_0.5_guidence_weights_0.25
wandb: ‚≠êÔ∏è View project at https://wandb.ai/graph-ccs/e3_diffusion_qm9
wandb: üöÄ View run at https://wandb.ai/graph-ccs/e3_diffusion_qm9/runs/qwibw26q
/atlas2/u/akshgarg/cfgdm/GeoLDM/qm9/models.py:286: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  probs = Categorical(torch.tensor(probs))
/atlas/u/akshgarg/anaconda3_copy/envs/torch1/lib/python3.9/site-packages/torch/cuda/__init__.py:146: UserWarning: 
NVIDIA RTX A4000 with CUDA capability sm_86 is not compatible with the current PyTorch installation.
The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_70.
If you want to use the NVIDIA RTX A4000 GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/

  warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
Traceback (most recent call last):
  File "/atlas2/u/akshgarg/cfgdm/GeoLDM/main_qm9.py", line 347, in <module>
    main()
  File "/atlas2/u/akshgarg/cfgdm/GeoLDM/main_qm9.py", line 297, in main
    train_epoch(args=args, loader=dataloaders['train'], epoch=epoch, model=model, model_dp=model_dp,
  File "/atlas2/u/akshgarg/cfgdm/GeoLDM/train_test.py", line 36, in train_epoch
    x = remove_mean_with_mask(x, node_mask)
  File "/atlas2/u/akshgarg/cfgdm/GeoLDM/equivariant_diffusion/utils.py", line 33, in remove_mean_with_mask
    masked_max_abs_value = (x * (1 - node_mask)).abs().sum().item()
  File "/atlas/u/akshgarg/anaconda3_copy/envs/torch1/lib/python3.9/site-packages/torch/_tensor.py", line 32, in wrapped
    return f(*args, **kwargs)
  File "/atlas/u/akshgarg/anaconda3_copy/envs/torch1/lib/python3.9/site-packages/torch/_tensor.py", line 639, in __rsub__
    return _C._VariableFunctions.rsub(self, other)
RuntimeError: CUDA error: no kernel image is available for execution on the device
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.
wandb: Synced single_cfg_mu_Cv_resume_qm9_second_half_egnn_dynamics_splitRatio_0.5_guidence_weights_0.25: https://wandb.ai/graph-ccs/e3_diffusion_qm9/runs/qwibw26q
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 2 other file(s)
wandb: Find logs at: ./wandb/run-20240123_144256-qwibw26q/logs
